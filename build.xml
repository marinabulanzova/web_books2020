<?xml version = "1.0" encoding = "utf-8" ?>
<project basedir="." default="testsRunning" name="web_bookstore">

    <property file = "build.properties"/>

    <presetdef name = "asadmin">
        <java jar = "${glassfish.home}/modules/admin-cli.jar" fork = "true" jvm = "${java.home}/bin/java">
            <arg line = "--port ${glassfish.admin.port}"/>
        </java>
    </presetdef>

    <target name="initDB">

        <ant antfile="${DB.dir}/build.xml"/>

    </target>

    <target name = "buildProject">

        <ant antfile = "${src.dir}/build.xml"/>

    </target>

    <target name = "testsRunning" depends = "initDB, buildProject">
        <ant antfile = "${test.dir}/build.xml"/>
    </target>

    <target name = "clean">
        <delete failonerror = "false">
            <fileset dir = "${build.dir}">
                <include name = "**/*.class"/>
            </fileset>
        </delete>
    </target>

    <target name = "clean-war">
        <delete failonerror = "false">
            <fileset dir = "${webapp.dir}">
                <include name = "**/*.class"/>
                <include name = "**/*.war"/>
            </fileset>
        </delete>
    </target>

    <target name = "build-war">
        <ant antfile = "${web.dir}/build.xml"/>
    </target>

    <!--<target name = "start-server">
        <asadmin failonerror = "true">
            <arg value = "start-domain"/>
            <arg value = "${glassfish.domain}"/>
        </asadmin>
    </target>

    <target name = "shutdown-server">
        <asadmin failonerror = "true">
            <arg value = "stop-domain"/>
            <arg value = "${glassfish.domain}"/>
        </asadmin>
    </target>

    <target name = "deploy">
        <asadmin failonerror = "true">
            <arg value = "deploy"/>
            <arg value = "-force=true"/>
            <arg value = "${webapp.dir}/${war.file}"/>
        </asadmin>
    </target>

    <target name = "undeploy">
        <asadmin failonerror = "true">
            <arg value = "undeploy"/>
            <arg value = "${war.name}"/>
        </asadmin>
    </target> -->



    <target name="check-if-deployed">

        <property name="tomcat.home.dir" value="apache-tomcat-8.5.53" />
        <property name="tomcat.base.url" value="http://localhost:8080" />
        <property name="tomcat.manager.url" value="${tomcat.base.url}/manager/text" />
        <property name="tomcat.user.name" value="tomcat" />
        <property name="tomcat.user.password" value="tomcat" />

        <condition property="is.webapp.deployed">
            <http url="${tomcat.manager.url}" />
        </condition>

        <path id="tomcat.classpath">
            <!-- We need the Catalina jars for Tomcat -->
            <fileset dir="${tomcat.home.dir}/lib">
                <include name="catalina-ant.jar"/>
                <include name="tomcat-coyote.jar"/>
                <include name="tomcat-util.jar"/>
            </fileset>
            <fileset dir="${tomcat.home.dir}/bin">
                <include name="tomcat-juli.jar"/>
            </fileset>
        </path>

        <!-- Configure the custom Ant tasks for the Manager application -->
        <taskdef name="deploy"    classname="org.apache.catalina.ant.DeployTask" classpathref="tomcat.classpath"/>
        <taskdef name="list"      classname="org.apache.catalina.ant.ListTask" classpathref="tomcat.classpath"/>
        <taskdef name="reload"    classname="org.apache.catalina.ant.ReloadTask" classpathref="tomcat.classpath"/>
        <taskdef name="findleaks" classname="org.apache.catalina.ant.FindLeaksTask" classpathref="tomcat.classpath"/>
        <taskdef name="resources" classname="org.apache.catalina.ant.ResourcesTask" classpathref="tomcat.classpath"/>
        <taskdef name="start"     classname="org.apache.catalina.ant.StartTask" classpathref="tomcat.classpath"/>
        <taskdef name="stop"      classname="org.apache.catalina.ant.StopTask" classpathref="tomcat.classpath"/>
        <taskdef name="undeploy"  classname="org.apache.catalina.ant.UndeployTask" classpathref="tomcat.classpath"/>
    </target>

    <target name="undeploy" depends="check-if-deployed" if="is.webapp.deployed">
        <!-- TOMCAT undeploy-->
        <undeploy
                url="${tomcat.manager.url}"
                username="${tomcat.user.name}"
                password="${tomcat.user.password}"
                path="/${ant.project.name}"
        />
    </target>

    <target name="deploy" depends="clean, clean-war, initDB, buildProject, build-war, undeploy" >
        <!-- TOMCAT deploy-->
        <deploy
                url="${tomcat.base.url}"
                username="${tomcat.user.name}"
                password="${tomcat.user.password}"
                path="/${ant.project.name}"
                war="${dist.dir}/${war.file}"
        />
    </target>

    <target name = "run-system-tests" >
        <ant antfile = "${selenium.dir}/build.xml"/>
    </target>

    <!--<target name = "all" depends = "clean, clean-war, initDB, buildProject, build-war, start-server, deploy"/>-->
</project>
