<?xml version = "1.0" encoding = "utf-8" ?>
<project basedir="." default="testsRunning" name="web_bookstore">

    <property file = "build.properties"/>

    <presetdef name = "asadmin">
        <java jar = "${glassfish.home}/modules/admin-cli.jar" fork = "true" jvm = "${java.home}/bin/java">
            <arg line = "--port ${glassfish.admin.port}"/>
        </java>
    </presetdef>

    <target name="initDB">

        <ant antfile="${DB.dir}/build.xml"/>

    </target>

    <target name = "buildProject">

        <ant antfile = "${src.dir}/build.xml"/>

    </target>

    <target name = "testsRunning" depends = "initDB, buildProject">
        <ant antfile = "${test.dir}/build.xml"/>
    </target>

    <target name = "clean">
        <delete failonerror = "false">
            <fileset dir = "${build.dir}">
                <include name = "**/*.class"/>
            </fileset>
        </delete>
    </target>

    <target name = "clean-war">
        <delete failonerror = "false">
            <fileset dir = "${webapp.dir}">
                <include name = "**/*.class"/>
                <include name = "**/*.war"/>
            </fileset>
        </delete>
    </target>

    <target name = "build-war">
        <ant antfile = "${web.dir}/build.xml"/>
    </target>

    <target name = "start-server">
        <asadmin failonerror = "true">
            <arg value = "start-domain"/>
            <arg value = "${glassfish.domain}"/>
        </asadmin>
    </target>

    <target name = "shutdown-server">
        <asadmin failonerror = "true">
            <arg value = "stop-domain"/>
            <arg value = "${glassfish.domain}"/>
        </asadmin>
    </target>

    <target name = "deploy">
        <asadmin failonerror = "true">
            <arg value = "deploy"/>
            <arg value = "--force=true"/>
            <arg value = "${webapp.dir}/${war.file}"/>
        </asadmin>
    </target>

    <target name = "undeploy">
        <asadmin failonerror = "true">
            <arg value = "undeploy"/>
            <arg value = "${war.name}"/>
        </asadmin>
    </target>

    <target name = "run-system-tests" >
        <ant antfile = "${selenium.dir}/build.xml"/>
    </target>

    <target name = "all" depends = "clean, clean-war, initDB, buildProject, build-war, start-server, deploy"/>
</project>
